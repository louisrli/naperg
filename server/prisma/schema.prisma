generator client {
  provider = "prisma-client-js"
}

datasource db {
  // LL: What is SQLite?
  provider = "sqlite"
  url      = "file:./dev.db"
}

// This comes with the boilerplate.
model User {
  id                       String    @id @default(cuid())
  createdAt                DateTime  @default(now())
  updatedAt                DateTime  @updatedAt
  email                    String    @unique
  password                 String
  role                     String
  lastLogin                DateTime?
  // LL: https://www.smashingmagazine.com/2017/11/safe-password-resets-with-json-web-tokens/
  resetPasswordToken       String
  dateResetPasswordRequest DateTime?
  validateEmailToken       String
  isEmailValidated         Boolean
  name                     String
  Feed                     Feed[]
}

// A user-created Feed. A feed can be a collection of sources, typically RSS
// feeds (the terminology should not to be confused, since "feed" has two
// meanings in this context.)
model Feed {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  url       String
  owner     User      @relation(fields: [ownerId], references: [id])
  ownerId   String
  sources   Source[]
  Article   Article[]
}

// A single source that should be updated.
model Source {
  id              String   @id @default(cuid())
  name            String
  rssFeedUrl      String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  // Not to be confused with updatedAt. updatedAt is when it was changed in the
  // database, and is handled by Prisma.
  lastRefreshedAt DateTime?
  feeds           Feed[]
  articles        Article[]
}

model Article {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String
  url       String
  content   String
  author    String?
  source      Source     @relation(fields: [sourceId], references: [id])
  sourceId    String
}
